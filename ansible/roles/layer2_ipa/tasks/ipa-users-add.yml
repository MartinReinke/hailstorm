---

# - name: add binduser to IPA for rhev
#   ipa: args="user-add rhev-bind-user --first=rhev --last=binduser"
#     password="{{ ipa_admin_password }}"
#     ignore_no_modifications=true
#
# - name: add abradshaw to IPA
#   ipa: args="user-add abradshaw --first=adrian --last=bradshaw"
#     password="{{ ipa_admin_password }}"
#     ignore_no_modifications=true

- name: find existing users
  shell: echo "{{ ipa_admin_password }}" | kinit admin && ipa user-find | grep "User login:" | cut -c 15-
  register: users
  changed_when: false

- name: add users to IPA
  shell: 'echo {{ ipa_admin_password }} | kinit admin && ipa user-add {{ item.username }} --first="{{ item.first }}" --last="{{ item.last }}"'
  when: item.username not in users.stdout_lines
  with_items: "{{ ipa_user }}"

- name: set initial password for users
  shell: "echo -e '{{ ipa_admin_password }}\ndummy4711\ndummy4711' | (kinit admin && ipa user-mod {{ item.username }} --password)"
  when: item.username not in users.stdout_lines
  with_items: "{{ ipa_user }}"

- name: login as user and change password
  shell: "echo -e 'dummy4711\n{{ item.password }}\n{{ item.password }}' | kinit {{ item.username }}"
  when: item.username not in users.stdout_lines and item.password is defined
  with_items: "{{ ipa_user }}"

- name: check if admin has email set
  shell: echo "{{ ipa_admin_password }}" | ipa user-show admin | awk '/Email/{ print $3 }'
  changed_when: false
  register: admin_email

- block:
    - name: get admin account objectClasses
      shell:
        ldapsearch
        -h localhost
        -D uid=admin,cn=users,cn=accounts,dc={{ hailstorm_dns_domain | regex_replace('\.',',dc=') }}
        -w {{ root_password }}
        -b cn=users,cn=accounts,dc={{ hailstorm_dns_domain | regex_replace('\.',',dc=') }}
        uid=admin objectClass |
        awk '/^objectClass/ { print $2 }'
      register: objectClasses
      changed_when: false
      failed_when: objectClasses.stdout == ""
    - name: create ldif file
      template: src=admin_inetOrgPerson.ldif.j2 dest=/tmp/admin_inetOrgPerson.ldif
      when: "'inetOrgPerson' not in objectClasses.stdout_lines"
    - name: add inetOrgPerson to admin account
      shell: ldapmodify -x -D uid=admin,cn=users,cn=accounts,dc={{ hailstorm_dns_domain | regex_replace('\.',',dc=') }} -w {{ root_password }} -f /tmp/admin_inetOrgPerson.ldif
      when: "'inetOrgPerson' not in objectClasses.stdout_lines"
    - name: set admin email address
      shell: echo "{{ ipa_admin_password }}" | ipa user-mod admin --email=admin@{{ hailstorm_dns_domain }}
  when: admin_email.stdout == ""
