# Enable the creation of Neutron networks for isolated Overcloud
# traffic and configure each role to assign ports (related
# to that role) on these networks.
resource_registry:
  OS::TripleO::Network::External: {{ tripleo_template_path }}/network/external.yaml
  OS::TripleO::Network::InternalApi: {{ tripleo_template_path }}/network/internal_api.yaml
  OS::TripleO::Network::StorageMgmt: {{ tripleo_template_path }}/network/storage_mgmt.yaml
  OS::TripleO::Network::Storage: {{ tripleo_template_path }}/network/storage.yaml
  OS::TripleO::Network::Tenant: {{ tripleo_template_path }}/network/tenant.yaml
  OS::TripleO::Network::Management: {{ tripleo_template_path }}/network/management.yaml

  # Port assignments for the VIPs
  OS::TripleO::Network::Ports::ExternalVipPort: {{ tripleo_template_path }}/network/ports/external.yaml
  OS::TripleO::Network::Ports::InternalApiVipPort: {{ tripleo_template_path }}/network/ports/internal_api.yaml
  OS::TripleO::Network::Ports::StorageVipPort: {{ tripleo_template_path }}/network/ports/storage.yaml
  OS::TripleO::Network::Ports::StorageMgmtVipPort: {{ tripleo_template_path }}/network/ports/storage_mgmt.yaml
  OS::TripleO::Network::Ports::TenantVipPort: {{ tripleo_template_path }}/network/ports/tenant.yaml
  OS::TripleO::Network::Ports::RedisVipPort: {{ tripleo_template_path }}/network/ports/vip.yaml

  # Port assignments for the controller role
  OS::TripleO::Controller::Ports::ExternalPort: {{ tripleo_template_path }}/network/ports/external.yaml
  OS::TripleO::Controller::Ports::InternalApiPort: {{ tripleo_template_path }}/network/ports/internal_api.yaml
  OS::TripleO::Controller::Ports::StoragePort: {{ tripleo_template_path }}/network/ports/storage.yaml
  OS::TripleO::Controller::Ports::StorageMgmtPort: {{ tripleo_template_path }}/network/ports/storage_mgmt.yaml
  OS::TripleO::Controller::Ports::TenantPort: {{ tripleo_template_path }}/network/ports/tenant.yaml
  OS::TripleO::Controller::Ports::ManagementPort: {{ tripleo_template_path }}/network/ports/management.yaml

  # Port assignments for the compute role
  OS::TripleO::Compute::Ports::InternalApiPort: {{ tripleo_template_path }}/network/ports/internal_api.yaml
  OS::TripleO::Compute::Ports::StoragePort: {{ tripleo_template_path }}/network/ports/storage.yaml
  OS::TripleO::Compute::Ports::TenantPort: {{ tripleo_template_path }}/network/ports/tenant.yaml
  OS::TripleO::Compute::Ports::ManagementPort: {{ tripleo_template_path }}/network/ports/management.yaml

  # Port assignments for the ceph storage role
  OS::TripleO::CephStorage::Ports::StoragePort: {{ tripleo_template_path }}/network/ports/storage.yaml
  OS::TripleO::CephStorage::Ports::StorageMgmtPort: {{ tripleo_template_path }}/network/ports/storage_mgmt.yaml
  OS::TripleO::CephStorage::Ports::ManagementPort: {{ tripleo_template_path }}/network/ports/management.yaml

  # NIC Configs for our roles
  OS::TripleO::Compute::Net::SoftwareConfig: {{ tripleo_template_path }}/nic-configs/compute.yaml
  OS::TripleO::Controller::Net::SoftwareConfig: {{ tripleo_template_path }}/nic-configs/controller.yaml
{#  OS::TripleO::CephStorage::Net::SoftwareConfig: {{ tripleo_template_path }}/nic-configs/ceph-storage.yaml #}

  # Invoke custom cloud init script:
  OS::TripleO::NodeUserData: {{ tripleo_template_path }}/firstboot-config.yaml

parameter_defaults:
  # Internal API used for private OpenStack Traffic
  InternalApiNetCidr: 172.17.1.0/24
  InternalApiAllocationPools: [{'start': '172.17.1.10', 'end': '172.17.1.200'}]
  InternalApiNetworkVlanID: 101

  # Tenant Network Traffic - will be used for VXLAN over VLAN
  TenantNetCidr: 172.17.2.0/24
  TenantAllocationPools: [{'start': '172.17.2.10', 'end': '172.17.2.200'}]
  TenantNetworkVlanID: 201

  # Public Storage Access - e.g. Nova/Glance <--> Ceph
  StorageNetCidr: 172.17.3.0/24
  StorageAllocationPools: [{'start': '172.17.3.10', 'end': '172.17.3.200'}]
  StorageNetworkVlanID: 301

  # Private Storage Access - i.e. Ceph background cluster/replication
  StorageMgmtNetCidr: 172.17.4.0/24
  StorageMgmtAllocationPools: [{'start': '172.17.4.10', 'end': '172.17.4.200'}]
  StorageMgmtNetworkVlanID: 401


  ExternalNetCidr: {{ infrastructure_network_services.default_gw_host_prefix | ipaddr('network') }}/{{ infrastructure_network_services.default_gw_host_prefix | ipaddr('prefix') }}
  # Leave room for floating IPs in the External allocation pool (if required)
  ExternalAllocationPools: [{'start': '{{ infrastructure_network_services.osp_overcloud_start }}', 'end': '{{ infrastructure_network_services.osp_overcloud_end }}'}]
  # Set to the router gateway on the external network
  ExternalInterfaceDefaultRoute: {{ infrastructure_network_services.default_gw_host_prefix | ipaddr('address') }}

  ManagementNetCidr: {{ infrastructure_network_guests.default_gw_host_prefix | ipaddr('network') }}/{{ infrastructure_network_guests.default_gw_host_prefix | ipaddr('prefix') }}
  ManagementAllocationPools: [{'start': '{{ infrastructure_network_guests.infra_start }}', 'end': '{{ infrastructure_network_guests.infra_end }}'}]
  ManagementInterfaceDefaultRoute: {{ infrastructure_network_guests.default_gw_host_prefix | ipaddr('address') }}


  # Add in configuration for the Control Plane - see http://docs.openstack.org/developer/tripleo-docs/advanced_deployment/network_isolation.html#updating-existing-configuration-templates-to-support-new-parameters
  # CIDR subnet mask length for provisioning network
  ControlPlaneSubnetCidr: "{{ infrastructure_network_rhosp_provisioning.default_gw_host_prefix | ipaddr('prefix') }}"
  # Gateway router for the provisioning network (or Undercloud IP)
  #ControlPlaneDefaultRoute: {{ infrastructure_network_rhosp_provisioning.default_gw_host_prefix | ipaddr('address') }}
# this is intentional - the undercloud's (controller, compute) default gw should be on the services network
  ControlPlaneDefaultRoute: {{ infrastructure_network_services.default_gw_host_prefix | ipaddr('address') }}


  # Generally the IP of the Undercloud
  EC2MetadataIp: {{ vm_nics[0].ip }}

  # Define the DNS servers (maximum 2) for the overcloud nodes
  DnsServers: [{% if ipa_available|success %}'{{ hostvars['ipa'].vm_nics[0].ip }}',{% endif %}'{{ infrastructure_address_default_dns }}']


  NeutronExternalNetworkBridge: "''"
  NeutronBridgeMappings: "datacentre:br-services,guests:br-guests"
  NeutronFlatNetworks: "datacentre, guests"
