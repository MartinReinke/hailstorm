heat_template_version: 2014-10-16

description: >
  Example extra config for post-deployment

# Note extra parameters can be defined, then passed data via the
# environment parameter_defaults, without modifying the parent template
parameters:
  servers:
    type: json

  # Optional implementation specific parameters
  some_extraparam:
    type: string

resources:
  ExtraConfig:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      config: |
        #!/bin/sh
        set -x

        function nova_compute_control {
          # set keystone auth version
          sudo openstack-config --set /etc/nova/nova.conf keystone_authtoken auth_version v3
        }

        function nova_control {
          # restart compute services
          sudo systemctl restart openstack-nova-api.service openstack-nova-cert.service openstack-nova-conductor.service openstack-nova-consoleauth.service openstack-nova-novncproxy.service openstack-nova-scheduler.service
        }

        function nova_compute {
          # modify VNC proxy config on compute nodes
          sudo crudini --set /etc/nova/nova.conf DEFAULT novncproxy_base_url http://openstack.{{ hailstorm_dns_domain }}:6080/vnc_auto.html &&

          # ensure that nova instance dir is mounted via NFS
          sudo setsebool -P virt_use_nfs 1
          sudo /bin/bash -c "grep -q /var/lib/nova/instances /etc/fstab || echo '{{ infrastructure_address_nfs_server }}:{{ nfs_rhosp_nova_path }}	/var/lib/nova/instances	nfs4	defaults	_netdev 0 0' >>/etc/fstab"
          sudo mount -a

          # restart compute service
          sudo systemctl restart openstack-nova-compute
        }
{% if ipa_available|success %}

        function cinder_control {
          sudo sed -i "s;:5000/v2;:5000/v3;g" /etc/cinder/cinder.conf
          sudo openstack-config --set /etc/cinder/cinder.conf keystone_authtoken auth_version v3
          sudo systemctl restart openstack-cinder-api
          sudo systemctl restart openstack-cinder-volume
        }

        function keystone_control {
          # create certs
          sudo cat <<EOF >/etc/ssl/certs/ca.crt
        {{ certificate.results[0].stdout|indent(8) }}
        EOF

          sudo cat <<EOF >/v
        {{ certificate.results[1].stdout|indent(8) }}
        EOF

          sudo update-ca-trust

          # allow ldap access
          sudo setsebool -P authlogin_nsswitch_use_ldap=on

          # adjust keystone config
          if [ ! -d /etc/keystone/domains/ ]; then
            sudo mkdir /etc/keystone/domains/ &&
            sudo chown keystone:keystone /etc/keystone/domains/;
          fi
          sudo openstack-config --set /etc/keystone/keystone.conf identity domain_specific_drivers_enabled true
          sudo openstack-config --set /etc/keystone/keystone.conf identity domain_config_dir /etc/keystone/domains
          sudo openstack-config --set /etc/keystone/keystone.conf assignment driver keystone.assignment.backends.sql.Assignment

          sudo grep -q -E ^OPENSTACK_API_VERSIONS /etc/openstack-dashboard/local_settings ||
          sudo cat <<EOF >>/etc/openstack-dashboard/local_settings
        OPENSTACK_API_VERSIONS = {
          "identity": 3
        }
        OPENSTACK_KEYSTONE_MULTIDOMAIN_SUPPORT = False
        OPENSTACK_KEYSTONE_DEFAULT_DOMAIN = '{{ osp_domain_name }}'
        EOF

          sudo cat <<EOF >/etc/keystone/domains/keystone.{{ osp_domain_name }}.conf
        [ldap]
        url =  ldap://{{ hostvars['ipa'].vm_nics[0].ip }}
        user = uid=osp-bind-user,cn=users,cn=accounts,dc={{ hailstorm_dns_domain | regex_replace('\.',',dc=') }}
        user_filter = (memberOf=cn=demo-all,cn=groups,cn=accounts,dc={{ hailstorm_dns_domain | regex_replace('\.',',dc=') }})
        password = {{ root_password }}
        user_tree_dn = cn=users,cn=accounts,dc={{ hailstorm_dns_domain | regex_replace('\.',',dc=') }}
        user_objectclass = inetUser
        user_id_attribute = uid
        user_name_attribute = uid
        user_mail_attribute = mail
        user_pass_attribute =
        user_allow_create = False
        user_allow_update = False
        user_allow_delete = False
        tls_cacertfile = /etc/ssl/certs/ca.crt

        [identity]
        driver = keystone.identity.backends.ldap.Identity
        EOF

          sudo chown keystone:keystone /etc/keystone/domains/keystone.hailstorm.conf

          sudo systemctl restart openstack-keystone.service
        }
  {% endif %}

        hostname | grep -q overcloud-compute && {% if ipa_available|success %}nova_compute_control && {% endif %} nova_compute
  {% if ipa_available|success %}      hostname | grep -q overcloud-control && keystone_control && nova_compute_control && cinder_control && nova_control && sudo systemctl restart httpd{% endif %}

        exit 0
  ExtraDeployments:
    type: OS::Heat::SoftwareDeployments
    properties:
      name: ExtraDeployments
      servers:  {get_param: servers}
      config: {get_resource: ExtraConfig}
      actions: ['CREATE'] # Only do this on CREATE
