- name: check deployed stack
  shell: . ~/stackrc && heat stack-list | grep overcloud
  failed_when: false
  changed_when: false
  register: stack

- block:
    - name: check IPA is available
      wait_for: host={{ inventory_hostname }} port=22 timeout=1
      register: ipa_available

    - name: copy certificate of IPA
      command: "{{ item }}"
      delegate_to: ipa
      register: certificate
      changed_when: false
      failed_when: certificate.stdout == ''
      when: ipa_available|success
      with_items:
        - cat /etc/ipa/ca.crt
        - openssl x509 -in /etc/ipa/ca.crt -outform PEM
  when: stack.stdout == ""

- block:
    - name: Create bin directory
      file: path=~/bin state=directory
    - name: create command binary
      template: src={{ item }}.j2 dest=~/bin/{{ item }} mode=0755
      with_items:
        - deploy-overcloud
        - virsh-names

    - name: Create templates directory
      file: path=~/templates state=directory
    - name: Create nic-configs directory
      file: path=~/templates/nic-configs state=directory

    - name: create custom install configuration
      template: src={{ item }}.j2 dest=~/templates/{{ item }} mode=0644
      with_items: "{{ templates }}"

    - name: create nic configs
      template: src={{ item }}.j2 dest=~/templates/nic-configs/{{ item }} mode=0644
      with_items:
        - "compute.yaml"
        - "controller.yaml"

    - name: deploy overcloud (even more coffee!)
      shell: >
        . ~/stackrc &&
        {{ lookup('template','deploy-overcloud.j2') }}
      tags: ['deploy-overcloud']

  when: stack.stdout == ""
  become: yes
  become_user: "{{ rhosp_stack_user }}"

- name: wait for stack creation to complete
  shell: . ~/stackrc && openstack stack list -f json
  register: stacklist
  until: ( stacklist.stdout | from_json )[0]['Stack Status'] != "CREATE_IN_PROGRESS"
  retries: 720
  delay: 60
  become: yes
  become_user: "{{ rhosp_stack_user }}"
  failed_when: ( stacklist.stdout | from_json )[0]['Stack Status'] == "CREATE_FAILED"
  changed_when: false
